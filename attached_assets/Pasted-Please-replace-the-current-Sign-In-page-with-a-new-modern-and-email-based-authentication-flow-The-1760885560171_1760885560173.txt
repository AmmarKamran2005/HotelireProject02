Please replace the current Sign In page with a new, modern, and email-based authentication flow.
The design should follow the same UI theme, color palette, and typography as the existing Signup/Signin screens.

Page 1 – “Sign in or Create an Account”

(This will replace the existing Sign In page.)

UI and Functionality Requirements:

Heading: “Sign in or Create an Account”

Subtext: “You can sign in using your Hotelire.ca account to access our services.”

Input Field:

Email Address (validated properly — correct email format, trimmed, no spaces)

Primary Button: “Continue with Email”

Divider: with text “or”

Secondary Button: “Continue with Google” (functional placeholder — no backend integration yet)

Footer Text:

By signing in or creating an account, you agree with our Terms & Conditions and Privacy Statement.
All rights reserved. Copyright (2006–2025) – Hotelire.ca™

Logic Flow
1️⃣ Case 1 – Email does not exist in the database (New User)

On clicking “Continue with Email”, validate the entered email.

If the email does not exist in the database:

Send a 4-digit verification code to the entered email (backend API placeholder).

Display a professional modern modal (popup) — OTP Verification Modal — directly over the current page (no navigation).

OTP Verification Modal:

Heading: “Verify Your Email”

Subtext: “We’ve sent a 4-digit verification code to your email. Please enter it below.”

Four horizontally aligned input boxes (for OTP digits).

Button: “Verify & Continue”

Small link: “Didn’t receive the code? Resend”

On successful OTP verification:
Redirect the user based on their entry point:

If from Login button (top-right avatar) → redirect to Register as Customer form.

If from “List Your Property” or “Sign up as Property Owner” → redirect to Property Owner Signup form.

If from a booking attempt → redirect to Customer Signup form.

Additional rule:

The email field inside the signup form should be auto-filled and disabled.

Use a single signup form, controlled by a condition (e.g., role flag: Customer / Owner).

2️⃣ Case 2 – Email exists in the database (Returning User)

On clicking “Continue with Email”, validate the email.

If the email exists, instead of OTP modal, open a Password Modal.

Password Modal:

Heading: “Welcome Back”

Subtext: “Enter your password to continue.”

Input Field: Password

Checkbox: “Remember me”

Link: “Forgot password?” (opens Forgot Password Modal — described below)

Button: “Continue”

On correct password:

Redirect user directly to where they came from (customer panel, booking page, or owner dashboard).

No signup form should appear for returning users.

Forgot Password Modal:

Heading: “Reset Your Password”

Subtext: “Enter your registered email to receive a reset code.”

Input Field: Email Address (validated properly)

Button: “Send Reset Code”

On clicking “Send Reset Code”, show a confirmation message like:

“A password reset link has been sent to your email.”

Optionally include a link to Return to Login.

(This modal can be a smaller centered popup over the password modal, following the same theme and animations.)

Technical Notes:

Both OTP Modal and Password Modal (and Forgot Password Modal) should have smooth transitions (fade or scale animation).

All modals must be responsive across desktop, tablet, and mobile.

Use placeholder API calls (/api/validate-email, /api/send-otp, /api/verify-otp, /api/login, /api/forgot-password).

Maintain clean, modular structure — each modal should be a reusable component.

Ensure UI consistency with existing authentication pages — same colors, fonts, padding, and rounded corners.