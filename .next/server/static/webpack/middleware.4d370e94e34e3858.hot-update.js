"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/webapi/jwt/verify.js\");\n// import { NextResponse } from \"next/server\";\n// import type { NextRequest } from \"next/server\";\n// import { authCheck } from \"./services/authCheck\";\n// // ðŸš€ MAIN Middleware Function\n// export async function middleware(request: NextRequest) {\n//   const url = request.nextUrl.clone();\n//   const token = request.cookies.get(\"token\")?.value;\n//   // Agar koi token hi nahi hai:\n//   if (!token) {\n//     // Agar user /admin ya /owner access kar raha hai â€” login bhej do\n//     if (url.pathname.startsWith(\"/admin\") || url.pathname.startsWith(\"/owner\")) {\n//       url.pathname = \"customer/signin\";\n//       return NextResponse.redirect(url);\n//     }\n//     // customer pages ke liye token required nahi\n//     return NextResponse.next();\n//   }\n//   try {\n//     const user = await authCheck();\n//     console.log(\"user is\",user);\n//     const roleId = parseInt(user.roleid); // e.g. 1=Admin, 2=Owner, 3=Customer\n//     // ðŸ›¡ Access control based on role:\n//     if (url.pathname.startsWith(\"/admin\")) {\n//       if (roleId !== 1) {\n//         url.pathname = \"/unauthorized\"; // custom unauthorized page\n//         return NextResponse.redirect(url);\n//       }\n//     }\n//     if (url.pathname.startsWith(\"/owner\")) {\n//       if (roleId !== 2) {\n//         url.pathname = \"/unauthorized\";\n//         return NextResponse.redirect(url);\n//       }\n//     }\n//     // /customer ya normal pages sab ke liye open\n//     return NextResponse.next();\n//   } catch (err) {\n//     console.error(\"JWT Verification Failed:\", err);\n//     url.pathname = \"/login\";\n//     return NextResponse.redirect(url);\n//   }\n// }\n// // ðŸ§­ Apply only to these routes:\n// export const config = {\n//   matcher: [\"/admin/:path*\", \"/owner/:path*\", \"/customer/:path*\"],\n// };\n\n\nasync function middleware(request) {\n    const url = request.nextUrl.clone();\n    const token = request.cookies.get(\"token\")?.value;\n    if (!token) {\n        if (url.pathname.startsWith(\"/admin\") || url.pathname.startsWith(\"/owner\")) {\n            url.pathname = \"/customer/signin\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    try {\n        // âœ… Verify token using jose\n        const secret = new TextEncoder().encode(process.env.JWT_SECRET);\n        const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.jwtVerify)(token, secret);\n        const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n        response.headers.set(\"x-debug-payload\", JSON.stringify(payload));\n        const roleId = parseInt(payload.roleid);\n        if (url.pathname.startsWith(\"/admin\") && roleId !== 1) {\n            url.pathname = \"/unauthorized\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n        }\n        if (url.pathname.startsWith(\"/owner\") && roleId !== 2) {\n            url.pathname = \"/unauthorized\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    } catch (err) {\n        console.error(\"JWT verification failed:\", err);\n        url.pathname = \"/customer/signin\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n    }\n}\nconst config = {\n    matcher: [\n        \"/admin/:path*\",\n        \"/owner/:path*\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsOENBQThDO0FBQzlDLGtEQUFrRDtBQUNsRCxvREFBb0Q7QUFJcEQsaUNBQWlDO0FBQ2pDLDJEQUEyRDtBQUMzRCx5Q0FBeUM7QUFDekMsdURBQXVEO0FBR3ZELG1DQUFtQztBQUNuQyxrQkFBa0I7QUFDbEIsd0VBQXdFO0FBQ3hFLG9GQUFvRjtBQUNwRiwwQ0FBMEM7QUFDMUMsMkNBQTJDO0FBQzNDLFFBQVE7QUFDUixvREFBb0Q7QUFDcEQsa0NBQWtDO0FBQ2xDLE1BQU07QUFFTixVQUFVO0FBRVYsc0NBQXNDO0FBRXRDLG1DQUFtQztBQUNuQyxpRkFBaUY7QUFFakYsMENBQTBDO0FBQzFDLCtDQUErQztBQUMvQyw0QkFBNEI7QUFDNUIsc0VBQXNFO0FBQ3RFLDZDQUE2QztBQUM3QyxVQUFVO0FBQ1YsUUFBUTtBQUVSLCtDQUErQztBQUMvQyw0QkFBNEI7QUFDNUIsMENBQTBDO0FBQzFDLDZDQUE2QztBQUM3QyxVQUFVO0FBQ1YsUUFBUTtBQUVSLG9EQUFvRDtBQUNwRCxrQ0FBa0M7QUFDbEMsb0JBQW9CO0FBQ3BCLHNEQUFzRDtBQUN0RCwrQkFBK0I7QUFDL0IseUNBQXlDO0FBQ3pDLE1BQU07QUFDTixJQUFJO0FBRUosb0NBQW9DO0FBQ3BDLDBCQUEwQjtBQUMxQixxRUFBcUU7QUFDckUsS0FBSztBQUdzQztBQUVWO0FBRTFCLGVBQWVFLFdBQVdDLE9BQW9CO0lBQ25ELE1BQU1DLE1BQU1ELFFBQVFFLE9BQU8sQ0FBQ0MsS0FBSztJQUNqQyxNQUFNQyxRQUFRSixRQUFRSyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxVQUFVQztJQUU1QyxJQUFJLENBQUNILE9BQU87UUFDVixJQUFJSCxJQUFJTyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxhQUFhUixJQUFJTyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxXQUFXO1lBQzFFUixJQUFJTyxRQUFRLEdBQUc7WUFDZixPQUFPWCxxREFBWUEsQ0FBQ2EsUUFBUSxDQUFDVDtRQUMvQjtRQUNBLE9BQU9KLHFEQUFZQSxDQUFDYyxJQUFJO0lBQzFCO0lBRUEsSUFBSTtRQUNGLDRCQUE0QjtRQUM1QixNQUFNQyxTQUFTLElBQUlDLGNBQWNDLE1BQU0sQ0FBQ0MsUUFBUUMsR0FBRyxDQUFDQyxVQUFVO1FBQzlELE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUcsTUFBTXBCLCtDQUFTQSxDQUFDTSxPQUFPUTtRQUUzQyxNQUFNTyxXQUFXdEIscURBQVlBLENBQUNjLElBQUk7UUFDakNRLFNBQVNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQkMsS0FBS0MsU0FBUyxDQUFDTDtRQUV4RCxNQUFNTSxTQUFTQyxTQUFTUCxRQUFRUSxNQUFNO1FBRXRDLElBQUl6QixJQUFJTyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxhQUFhZSxXQUFXLEdBQUc7WUFDckR2QixJQUFJTyxRQUFRLEdBQUc7WUFDZixPQUFPWCxxREFBWUEsQ0FBQ2EsUUFBUSxDQUFDVDtRQUMvQjtRQUVBLElBQUlBLElBQUlPLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLGFBQWFlLFdBQVcsR0FBRztZQUNyRHZCLElBQUlPLFFBQVEsR0FBRztZQUNmLE9BQU9YLHFEQUFZQSxDQUFDYSxRQUFRLENBQUNUO1FBQy9CO1FBRUEsT0FBT0oscURBQVlBLENBQUNjLElBQUk7SUFDMUIsRUFBRSxPQUFPZ0IsS0FBSztRQUNaQyxRQUFRQyxLQUFLLENBQUMsNEJBQTRCRjtRQUMxQzFCLElBQUlPLFFBQVEsR0FBRztRQUNmLE9BQU9YLHFEQUFZQSxDQUFDYSxRQUFRLENBQUNUO0lBQy9CO0FBQ0Y7QUFFTyxNQUFNNkIsU0FBUztJQUNwQkMsU0FBUztRQUFDO1FBQWlCO0tBQWdCO0FBQzdDLEVBQUUiLCJzb3VyY2VzIjpbIkM6XFxQcm9qZWN0c1xcSG90ZWxpcmVcXEhvdGVsaXJlRnJvbnRlbmRcXEhvdGVsaXJlUHJvamVjdDAyXFxtaWRkbGV3YXJlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xyXG4vLyBpbXBvcnQgdHlwZSB7IE5leHRSZXF1ZXN0IH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XHJcbi8vIGltcG9ydCB7IGF1dGhDaGVjayB9IGZyb20gXCIuL3NlcnZpY2VzL2F1dGhDaGVja1wiO1xyXG5cclxuXHJcblxyXG4vLyAvLyDwn5qAIE1BSU4gTWlkZGxld2FyZSBGdW5jdGlvblxyXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4vLyAgIGNvbnN0IHVybCA9IHJlcXVlc3QubmV4dFVybC5jbG9uZSgpO1xyXG4vLyAgIGNvbnN0IHRva2VuID0gcmVxdWVzdC5jb29raWVzLmdldChcInRva2VuXCIpPy52YWx1ZTtcclxuXHJcblxyXG4vLyAgIC8vIEFnYXIga29pIHRva2VuIGhpIG5haGkgaGFpOlxyXG4vLyAgIGlmICghdG9rZW4pIHtcclxuLy8gICAgIC8vIEFnYXIgdXNlciAvYWRtaW4geWEgL293bmVyIGFjY2VzcyBrYXIgcmFoYSBoYWkg4oCUIGxvZ2luIGJoZWogZG9cclxuLy8gICAgIGlmICh1cmwucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9hZG1pblwiKSB8fCB1cmwucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9vd25lclwiKSkge1xyXG4vLyAgICAgICB1cmwucGF0aG5hbWUgPSBcImN1c3RvbWVyL3NpZ25pblwiO1xyXG4vLyAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybCk7XHJcbi8vICAgICB9XHJcbi8vICAgICAvLyBjdXN0b21lciBwYWdlcyBrZSBsaXllIHRva2VuIHJlcXVpcmVkIG5haGlcclxuLy8gICAgIHJldHVybiBOZXh0UmVzcG9uc2UubmV4dCgpO1xyXG4vLyAgIH1cclxuXHJcbi8vICAgdHJ5IHtcclxuXHJcbi8vICAgICBjb25zdCB1c2VyID0gYXdhaXQgYXV0aENoZWNrKCk7XHJcblxyXG4vLyAgICAgY29uc29sZS5sb2coXCJ1c2VyIGlzXCIsdXNlcik7XHJcbi8vICAgICBjb25zdCByb2xlSWQgPSBwYXJzZUludCh1c2VyLnJvbGVpZCk7IC8vIGUuZy4gMT1BZG1pbiwgMj1Pd25lciwgMz1DdXN0b21lclxyXG5cclxuLy8gICAgIC8vIPCfm6EgQWNjZXNzIGNvbnRyb2wgYmFzZWQgb24gcm9sZTpcclxuLy8gICAgIGlmICh1cmwucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9hZG1pblwiKSkge1xyXG4vLyAgICAgICBpZiAocm9sZUlkICE9PSAxKSB7XHJcbi8vICAgICAgICAgdXJsLnBhdGhuYW1lID0gXCIvdW5hdXRob3JpemVkXCI7IC8vIGN1c3RvbSB1bmF1dGhvcml6ZWQgcGFnZVxyXG4vLyAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIGlmICh1cmwucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9vd25lclwiKSkge1xyXG4vLyAgICAgICBpZiAocm9sZUlkICE9PSAyKSB7XHJcbi8vICAgICAgICAgdXJsLnBhdGhuYW1lID0gXCIvdW5hdXRob3JpemVkXCI7XHJcbi8vICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG4vLyAgICAgICB9XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgLy8gL2N1c3RvbWVyIHlhIG5vcm1hbCBwYWdlcyBzYWIga2UgbGl5ZSBvcGVuXHJcbi8vICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcclxuLy8gICB9IGNhdGNoIChlcnIpIHtcclxuLy8gICAgIGNvbnNvbGUuZXJyb3IoXCJKV1QgVmVyaWZpY2F0aW9uIEZhaWxlZDpcIiwgZXJyKTtcclxuLy8gICAgIHVybC5wYXRobmFtZSA9IFwiL2xvZ2luXCI7XHJcbi8vICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybCk7XHJcbi8vICAgfVxyXG4vLyB9XHJcblxyXG4vLyAvLyDwn6etIEFwcGx5IG9ubHkgdG8gdGhlc2Ugcm91dGVzOlxyXG4vLyBleHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4vLyAgIG1hdGNoZXI6IFtcIi9hZG1pbi86cGF0aCpcIiwgXCIvb3duZXIvOnBhdGgqXCIsIFwiL2N1c3RvbWVyLzpwYXRoKlwiXSxcclxuLy8gfTtcclxuXHJcblxyXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcclxuaW1wb3J0IHR5cGUgeyBOZXh0UmVxdWVzdCB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xyXG5pbXBvcnQgeyBqd3RWZXJpZnkgfSBmcm9tIFwiam9zZVwiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICBjb25zdCB1cmwgPSByZXF1ZXN0Lm5leHRVcmwuY2xvbmUoKTtcclxuICBjb25zdCB0b2tlbiA9IHJlcXVlc3QuY29va2llcy5nZXQoXCJ0b2tlblwiKT8udmFsdWU7XHJcblxyXG4gIGlmICghdG9rZW4pIHtcclxuICAgIGlmICh1cmwucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9hZG1pblwiKSB8fCB1cmwucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9vd25lclwiKSkge1xyXG4gICAgICB1cmwucGF0aG5hbWUgPSBcIi9jdXN0b21lci9zaWduaW5cIjtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgLy8g4pyFIFZlcmlmeSB0b2tlbiB1c2luZyBqb3NlXHJcbiAgICBjb25zdCBzZWNyZXQgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUocHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCk7XHJcbiAgICBjb25zdCB7IHBheWxvYWQgfSA9IGF3YWl0IGp3dFZlcmlmeSh0b2tlbiwgc2VjcmV0KTtcclxuXHJcbiAgICBjb25zdCByZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KCk7XHJcbiAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoXCJ4LWRlYnVnLXBheWxvYWRcIiwgSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkpO1xyXG5cclxuICAgIGNvbnN0IHJvbGVJZCA9IHBhcnNlSW50KHBheWxvYWQucm9sZWlkIGFzIHN0cmluZyk7XHJcblxyXG4gICAgaWYgKHVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL2FkbWluXCIpICYmIHJvbGVJZCAhPT0gMSkge1xyXG4gICAgICB1cmwucGF0aG5hbWUgPSBcIi91bmF1dGhvcml6ZWRcIjtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh1cmwucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9vd25lclwiKSAmJiByb2xlSWQgIT09IDIpIHtcclxuICAgICAgdXJsLnBhdGhuYW1lID0gXCIvdW5hdXRob3JpemVkXCI7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJKV1QgdmVyaWZpY2F0aW9uIGZhaWxlZDpcIiwgZXJyKTtcclxuICAgIHVybC5wYXRobmFtZSA9IFwiL2N1c3RvbWVyL3NpZ25pblwiO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBtYXRjaGVyOiBbXCIvYWRtaW4vOnBhdGgqXCIsIFwiL293bmVyLzpwYXRoKlwiXSxcclxufTtcclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImp3dFZlcmlmeSIsIm1pZGRsZXdhcmUiLCJyZXF1ZXN0IiwidXJsIiwibmV4dFVybCIsImNsb25lIiwidG9rZW4iLCJjb29raWVzIiwiZ2V0IiwidmFsdWUiLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiLCJyZWRpcmVjdCIsIm5leHQiLCJzZWNyZXQiLCJUZXh0RW5jb2RlciIsImVuY29kZSIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwicGF5bG9hZCIsInJlc3BvbnNlIiwiaGVhZGVycyIsInNldCIsIkpTT04iLCJzdHJpbmdpZnkiLCJyb2xlSWQiLCJwYXJzZUludCIsInJvbGVpZCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImNvbmZpZyIsIm1hdGNoZXIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});