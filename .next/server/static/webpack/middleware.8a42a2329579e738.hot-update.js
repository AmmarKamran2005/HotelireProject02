"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/webapi/jwt/verify.js\");\n// import { NextResponse } from \"next/server\";\n// import type { NextRequest } from \"next/server\";\n// import { authCheck } from \"./services/authCheck\";\n// // ðŸš€ MAIN Middleware Function\n// export async function middleware(request: NextRequest) {\n//   const url = request.nextUrl.clone();\n//   const token = request.cookies.get(\"token\")?.value;\n//   // Agar koi token hi nahi hai:\n//   if (!token) {\n//     // Agar user /admin ya /owner access kar raha hai â€” login bhej do\n//     if (url.pathname.startsWith(\"/admin\") || url.pathname.startsWith(\"/owner\")) {\n//       url.pathname = \"customer/signin\";\n//       return NextResponse.redirect(url);\n//     }\n//     // customer pages ke liye token required nahi\n//     return NextResponse.next();\n//   }\n//   try {\n//     const user = await authCheck();\n//     console.log(\"user is\",user);\n//     const roleId = parseInt(user.roleid); // e.g. 1=Admin, 2=Owner, 3=Customer\n//     // ðŸ›¡ Access control based on role:\n//     if (url.pathname.startsWith(\"/admin\")) {\n//       if (roleId !== 1) {\n//         url.pathname = \"/unauthorized\"; // custom unauthorized page\n//         return NextResponse.redirect(url);\n//       }\n//     }\n//     if (url.pathname.startsWith(\"/owner\")) {\n//       if (roleId !== 2) {\n//         url.pathname = \"/unauthorized\";\n//         return NextResponse.redirect(url);\n//       }\n//     }\n//     // /customer ya normal pages sab ke liye open\n//     return NextResponse.next();\n//   } catch (err) {\n//     console.error(\"JWT Verification Failed:\", err);\n//     url.pathname = \"/login\";\n//     return NextResponse.redirect(url);\n//   }\n// }\n// // ðŸ§­ Apply only to these routes:\n// export const config = {\n//   matcher: [\"/admin/:path*\", \"/owner/:path*\", \"/customer/:path*\"],\n// };\n\n\nasync function middleware(request) {\n    const url = request.nextUrl.clone();\n    const token = request.cookies.get(\"token\")?.value;\n    if (!token) {\n        if (url.pathname.startsWith(\"/admin\") || url.pathname.startsWith(\"/owner\")) {\n            url.pathname = \"/customer/signin\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    try {\n        // âœ… Verify token using jose\n        const secret = new TextEncoder().encode(process.env.JWT_SECRET);\n        const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.jwtVerify)(token, secret);\n        //    url.searchParams.set(\"debug\", JSON.stringify(payload));\n        //  return NextResponse.redirect(url);\n        const roleId = parseInt(payload.user?.roleid);\n        if (url.pathname.startsWith(\"/admin\") && roleId !== 1) {\n            url.pathname = \"/unauthorized\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n        }\n        if (url.pathname.startsWith(\"/owner\") && roleId !== 2) {\n            url.pathname = \"/unauthorized\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    } catch (err) {\n        console.error(\"JWT verification failed:\", err);\n        url.pathname = \"/customer/signin\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n    }\n}\nconst config = {\n    matcher: [\n        \"/admin/:path*\",\n        \"/owner/:path*\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsOENBQThDO0FBQzlDLGtEQUFrRDtBQUNsRCxvREFBb0Q7QUFJcEQsaUNBQWlDO0FBQ2pDLDJEQUEyRDtBQUMzRCx5Q0FBeUM7QUFDekMsdURBQXVEO0FBR3ZELG1DQUFtQztBQUNuQyxrQkFBa0I7QUFDbEIsd0VBQXdFO0FBQ3hFLG9GQUFvRjtBQUNwRiwwQ0FBMEM7QUFDMUMsMkNBQTJDO0FBQzNDLFFBQVE7QUFDUixvREFBb0Q7QUFDcEQsa0NBQWtDO0FBQ2xDLE1BQU07QUFFTixVQUFVO0FBRVYsc0NBQXNDO0FBRXRDLG1DQUFtQztBQUNuQyxpRkFBaUY7QUFFakYsMENBQTBDO0FBQzFDLCtDQUErQztBQUMvQyw0QkFBNEI7QUFDNUIsc0VBQXNFO0FBQ3RFLDZDQUE2QztBQUM3QyxVQUFVO0FBQ1YsUUFBUTtBQUVSLCtDQUErQztBQUMvQyw0QkFBNEI7QUFDNUIsMENBQTBDO0FBQzFDLDZDQUE2QztBQUM3QyxVQUFVO0FBQ1YsUUFBUTtBQUVSLG9EQUFvRDtBQUNwRCxrQ0FBa0M7QUFDbEMsb0JBQW9CO0FBQ3BCLHNEQUFzRDtBQUN0RCwrQkFBK0I7QUFDL0IseUNBQXlDO0FBQ3pDLE1BQU07QUFDTixJQUFJO0FBRUosb0NBQW9DO0FBQ3BDLDBCQUEwQjtBQUMxQixxRUFBcUU7QUFDckUsS0FBSztBQUdzQztBQUVWO0FBRTFCLGVBQWVFLFdBQVdDLE9BQW9CO0lBQ25ELE1BQU1DLE1BQU1ELFFBQVFFLE9BQU8sQ0FBQ0MsS0FBSztJQUNqQyxNQUFNQyxRQUFRSixRQUFRSyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxVQUFVQztJQUU1QyxJQUFJLENBQUNILE9BQU87UUFDVixJQUFJSCxJQUFJTyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxhQUFhUixJQUFJTyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxXQUFXO1lBQzFFUixJQUFJTyxRQUFRLEdBQUc7WUFDZixPQUFPWCxxREFBWUEsQ0FBQ2EsUUFBUSxDQUFDVDtRQUMvQjtRQUNBLE9BQU9KLHFEQUFZQSxDQUFDYyxJQUFJO0lBQzFCO0lBRUEsSUFBSTtRQUNGLDRCQUE0QjtRQUM1QixNQUFNQyxTQUFTLElBQUlDLGNBQWNDLE1BQU0sQ0FBQ0MsUUFBUUMsR0FBRyxDQUFDQyxVQUFVO1FBQzlELE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUcsTUFBTXBCLCtDQUFTQSxDQUFDTSxPQUFPUTtRQUUzQyw2REFBNkQ7UUFDN0Qsc0NBQXNDO1FBR3RDLE1BQU1PLFNBQVNDLFNBQVNGLFFBQVFHLElBQUksRUFBRUM7UUFFdEMsSUFBSXJCLElBQUlPLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLGFBQWFVLFdBQVcsR0FBRztZQUNyRGxCLElBQUlPLFFBQVEsR0FBRztZQUNmLE9BQU9YLHFEQUFZQSxDQUFDYSxRQUFRLENBQUNUO1FBQy9CO1FBRUEsSUFBSUEsSUFBSU8sUUFBUSxDQUFDQyxVQUFVLENBQUMsYUFBYVUsV0FBVyxHQUFHO1lBQ3JEbEIsSUFBSU8sUUFBUSxHQUFHO1lBQ2YsT0FBT1gscURBQVlBLENBQUNhLFFBQVEsQ0FBQ1Q7UUFDL0I7UUFFQSxPQUFPSixxREFBWUEsQ0FBQ2MsSUFBSTtJQUMxQixFQUFFLE9BQU9ZLEtBQUs7UUFDWkMsUUFBUUMsS0FBSyxDQUFDLDRCQUE0QkY7UUFDMUN0QixJQUFJTyxRQUFRLEdBQUc7UUFDZixPQUFPWCxxREFBWUEsQ0FBQ2EsUUFBUSxDQUFDVDtJQUMvQjtBQUNGO0FBRU8sTUFBTXlCLFNBQVM7SUFDcEJDLFNBQVM7UUFBQztRQUFpQjtLQUFnQjtBQUM3QyxFQUFFIiwic291cmNlcyI6WyJDOlxcUHJvamVjdHNcXEhvdGVsaXJlXFxIb3RlbGlyZUZyb250ZW5kXFxIb3RlbGlyZVByb2plY3QwMlxcbWlkZGxld2FyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcclxuLy8gaW1wb3J0IHR5cGUgeyBOZXh0UmVxdWVzdCB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xyXG4vLyBpbXBvcnQgeyBhdXRoQ2hlY2sgfSBmcm9tIFwiLi9zZXJ2aWNlcy9hdXRoQ2hlY2tcIjtcclxuXHJcblxyXG5cclxuLy8gLy8g8J+agCBNQUlOIE1pZGRsZXdhcmUgRnVuY3Rpb25cclxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuLy8gICBjb25zdCB1cmwgPSByZXF1ZXN0Lm5leHRVcmwuY2xvbmUoKTtcclxuLy8gICBjb25zdCB0b2tlbiA9IHJlcXVlc3QuY29va2llcy5nZXQoXCJ0b2tlblwiKT8udmFsdWU7XHJcblxyXG5cclxuLy8gICAvLyBBZ2FyIGtvaSB0b2tlbiBoaSBuYWhpIGhhaTpcclxuLy8gICBpZiAoIXRva2VuKSB7XHJcbi8vICAgICAvLyBBZ2FyIHVzZXIgL2FkbWluIHlhIC9vd25lciBhY2Nlc3Mga2FyIHJhaGEgaGFpIOKAlCBsb2dpbiBiaGVqIGRvXHJcbi8vICAgICBpZiAodXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvYWRtaW5cIikgfHwgdXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvb3duZXJcIikpIHtcclxuLy8gICAgICAgdXJsLnBhdGhuYW1lID0gXCJjdXN0b21lci9zaWduaW5cIjtcclxuLy8gICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgLy8gY3VzdG9tZXIgcGFnZXMga2UgbGl5ZSB0b2tlbiByZXF1aXJlZCBuYWhpXHJcbi8vICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcclxuLy8gICB9XHJcblxyXG4vLyAgIHRyeSB7XHJcblxyXG4vLyAgICAgY29uc3QgdXNlciA9IGF3YWl0IGF1dGhDaGVjaygpO1xyXG5cclxuLy8gICAgIGNvbnNvbGUubG9nKFwidXNlciBpc1wiLHVzZXIpO1xyXG4vLyAgICAgY29uc3Qgcm9sZUlkID0gcGFyc2VJbnQodXNlci5yb2xlaWQpOyAvLyBlLmcuIDE9QWRtaW4sIDI9T3duZXIsIDM9Q3VzdG9tZXJcclxuXHJcbi8vICAgICAvLyDwn5uhIEFjY2VzcyBjb250cm9sIGJhc2VkIG9uIHJvbGU6XHJcbi8vICAgICBpZiAodXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvYWRtaW5cIikpIHtcclxuLy8gICAgICAgaWYgKHJvbGVJZCAhPT0gMSkge1xyXG4vLyAgICAgICAgIHVybC5wYXRobmFtZSA9IFwiL3VuYXV0aG9yaXplZFwiOyAvLyBjdXN0b20gdW5hdXRob3JpemVkIHBhZ2VcclxuLy8gICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybCk7XHJcbi8vICAgICAgIH1cclxuLy8gICAgIH1cclxuXHJcbi8vICAgICBpZiAodXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvb3duZXJcIikpIHtcclxuLy8gICAgICAgaWYgKHJvbGVJZCAhPT0gMikge1xyXG4vLyAgICAgICAgIHVybC5wYXRobmFtZSA9IFwiL3VuYXV0aG9yaXplZFwiO1xyXG4vLyAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIC8vIC9jdXN0b21lciB5YSBub3JtYWwgcGFnZXMgc2FiIGtlIGxpeWUgb3BlblxyXG4vLyAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XHJcbi8vICAgfSBjYXRjaCAoZXJyKSB7XHJcbi8vICAgICBjb25zb2xlLmVycm9yKFwiSldUIFZlcmlmaWNhdGlvbiBGYWlsZWQ6XCIsIGVycik7XHJcbi8vICAgICB1cmwucGF0aG5hbWUgPSBcIi9sb2dpblwiO1xyXG4vLyAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG4vLyAgIH1cclxuLy8gfVxyXG5cclxuLy8gLy8g8J+nrSBBcHBseSBvbmx5IHRvIHRoZXNlIHJvdXRlczpcclxuLy8gZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuLy8gICBtYXRjaGVyOiBbXCIvYWRtaW4vOnBhdGgqXCIsIFwiL293bmVyLzpwYXRoKlwiLCBcIi9jdXN0b21lci86cGF0aCpcIl0sXHJcbi8vIH07XHJcblxyXG5cclxuaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XHJcbmltcG9ydCB0eXBlIHsgTmV4dFJlcXVlc3QgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcclxuaW1wb3J0IHsgand0VmVyaWZ5IH0gZnJvbSBcImpvc2VcIjtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgY29uc3QgdXJsID0gcmVxdWVzdC5uZXh0VXJsLmNsb25lKCk7XHJcbiAgY29uc3QgdG9rZW4gPSByZXF1ZXN0LmNvb2tpZXMuZ2V0KFwidG9rZW5cIik/LnZhbHVlO1xyXG5cclxuICBpZiAoIXRva2VuKSB7XHJcbiAgICBpZiAodXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvYWRtaW5cIikgfHwgdXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvb3duZXJcIikpIHtcclxuICAgICAgdXJsLnBhdGhuYW1lID0gXCIvY3VzdG9tZXIvc2lnbmluXCI7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcclxuICAgIH1cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UubmV4dCgpO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIC8vIOKchSBWZXJpZnkgdG9rZW4gdXNpbmcgam9zZVxyXG4gICAgY29uc3Qgc2VjcmV0ID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpO1xyXG4gICAgY29uc3QgeyBwYXlsb2FkIH0gPSBhd2FpdCBqd3RWZXJpZnkodG9rZW4sIHNlY3JldCk7XHJcblxyXG4gICAgLy8gICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoXCJkZWJ1Z1wiLCBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSk7XHJcbiAgICAvLyAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG5cclxuXHJcbiAgICBjb25zdCByb2xlSWQgPSBwYXJzZUludChwYXlsb2FkLnVzZXI/LnJvbGVpZCk7XHJcblxyXG4gICAgaWYgKHVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL2FkbWluXCIpICYmIHJvbGVJZCAhPT0gMSkge1xyXG4gICAgICB1cmwucGF0aG5hbWUgPSBcIi91bmF1dGhvcml6ZWRcIjtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh1cmwucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9vd25lclwiKSAmJiByb2xlSWQgIT09IDIpIHtcclxuICAgICAgdXJsLnBhdGhuYW1lID0gXCIvdW5hdXRob3JpemVkXCI7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJKV1QgdmVyaWZpY2F0aW9uIGZhaWxlZDpcIiwgZXJyKTtcclxuICAgIHVybC5wYXRobmFtZSA9IFwiL2N1c3RvbWVyL3NpZ25pblwiO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBtYXRjaGVyOiBbXCIvYWRtaW4vOnBhdGgqXCIsIFwiL293bmVyLzpwYXRoKlwiXSxcclxufTtcclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImp3dFZlcmlmeSIsIm1pZGRsZXdhcmUiLCJyZXF1ZXN0IiwidXJsIiwibmV4dFVybCIsImNsb25lIiwidG9rZW4iLCJjb29raWVzIiwiZ2V0IiwidmFsdWUiLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiLCJyZWRpcmVjdCIsIm5leHQiLCJzZWNyZXQiLCJUZXh0RW5jb2RlciIsImVuY29kZSIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwicGF5bG9hZCIsInJvbGVJZCIsInBhcnNlSW50IiwidXNlciIsInJvbGVpZCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImNvbmZpZyIsIm1hdGNoZXIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});