"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/webapi/jwt/verify.js\");\n// import { NextResponse } from \"next/server\";\n// import type { NextRequest } from \"next/server\";\n// import { authCheck } from \"./services/authCheck\";\n// // ðŸš€ MAIN Middleware Function\n// export async function middleware(request: NextRequest) {\n//   const url = request.nextUrl.clone();\n//   const token = request.cookies.get(\"token\")?.value;\n//   // Agar koi token hi nahi hai:\n//   if (!token) {\n//     // Agar user /admin ya /owner access kar raha hai â€” login bhej do\n//     if (url.pathname.startsWith(\"/admin\") || url.pathname.startsWith(\"/owner\")) {\n//       url.pathname = \"customer/signin\";\n//       return NextResponse.redirect(url);\n//     }\n//     // customer pages ke liye token required nahi\n//     return NextResponse.next();\n//   }\n//   try {\n//     const user = await authCheck();\n//     console.log(\"user is\",user);\n//     const roleId = parseInt(user.roleid); // e.g. 1=Admin, 2=Owner, 3=Customer\n//     // ðŸ›¡ Access control based on role:\n//     if (url.pathname.startsWith(\"/admin\")) {\n//       if (roleId !== 1) {\n//         url.pathname = \"/unauthorized\"; // custom unauthorized page\n//         return NextResponse.redirect(url);\n//       }\n//     }\n//     if (url.pathname.startsWith(\"/owner\")) {\n//       if (roleId !== 2) {\n//         url.pathname = \"/unauthorized\";\n//         return NextResponse.redirect(url);\n//       }\n//     }\n//     // /customer ya normal pages sab ke liye open\n//     return NextResponse.next();\n//   } catch (err) {\n//     console.error(\"JWT Verification Failed:\", err);\n//     url.pathname = \"/login\";\n//     return NextResponse.redirect(url);\n//   }\n// }\n// // ðŸ§­ Apply only to these routes:\n// export const config = {\n//   matcher: [\"/admin/:path*\", \"/owner/:path*\", \"/customer/:path*\"],\n// };\n\n\nasync function middleware(request) {\n    const url = request.nextUrl.clone();\n    const token = request.cookies.get(\"token\")?.value;\n    if (!token) {\n        if (url.pathname.startsWith(\"/admin\") || url.pathname.startsWith(\"/owner\")) {\n            url.pathname = \"/customer/signin\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    try {\n        // âœ… Verify token using jose\n        const secret = new TextEncoder().encode(process.env.JWT_SECRET);\n        const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.jwtVerify)(token, secret);\n        response.headers.set(\"x-debug-payload\", JSON.stringify(payload));\n        const roleId = parseInt(payload.roleid);\n        if (url.pathname.startsWith(\"/admin\") && roleId !== 1) {\n            url.pathname = \"/unauthorized\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n        }\n        if (url.pathname.startsWith(\"/owner\") && roleId !== 2) {\n            url.pathname = \"/unauthorized\";\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    } catch (err) {\n        console.error(\"JWT verification failed:\", err);\n        url.pathname = \"/customer/signin\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(url);\n    }\n}\nconst config = {\n    matcher: [\n        \"/admin/:path*\",\n        \"/owner/:path*\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsOENBQThDO0FBQzlDLGtEQUFrRDtBQUNsRCxvREFBb0Q7QUFJcEQsaUNBQWlDO0FBQ2pDLDJEQUEyRDtBQUMzRCx5Q0FBeUM7QUFDekMsdURBQXVEO0FBR3ZELG1DQUFtQztBQUNuQyxrQkFBa0I7QUFDbEIsd0VBQXdFO0FBQ3hFLG9GQUFvRjtBQUNwRiwwQ0FBMEM7QUFDMUMsMkNBQTJDO0FBQzNDLFFBQVE7QUFDUixvREFBb0Q7QUFDcEQsa0NBQWtDO0FBQ2xDLE1BQU07QUFFTixVQUFVO0FBRVYsc0NBQXNDO0FBRXRDLG1DQUFtQztBQUNuQyxpRkFBaUY7QUFFakYsMENBQTBDO0FBQzFDLCtDQUErQztBQUMvQyw0QkFBNEI7QUFDNUIsc0VBQXNFO0FBQ3RFLDZDQUE2QztBQUM3QyxVQUFVO0FBQ1YsUUFBUTtBQUVSLCtDQUErQztBQUMvQyw0QkFBNEI7QUFDNUIsMENBQTBDO0FBQzFDLDZDQUE2QztBQUM3QyxVQUFVO0FBQ1YsUUFBUTtBQUVSLG9EQUFvRDtBQUNwRCxrQ0FBa0M7QUFDbEMsb0JBQW9CO0FBQ3BCLHNEQUFzRDtBQUN0RCwrQkFBK0I7QUFDL0IseUNBQXlDO0FBQ3pDLE1BQU07QUFDTixJQUFJO0FBRUosb0NBQW9DO0FBQ3BDLDBCQUEwQjtBQUMxQixxRUFBcUU7QUFDckUsS0FBSztBQUdzQztBQUVWO0FBRTFCLGVBQWVFLFdBQVdDLE9BQW9CO0lBQ25ELE1BQU1DLE1BQU1ELFFBQVFFLE9BQU8sQ0FBQ0MsS0FBSztJQUNqQyxNQUFNQyxRQUFRSixRQUFRSyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxVQUFVQztJQUU1QyxJQUFJLENBQUNILE9BQU87UUFDVixJQUFJSCxJQUFJTyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxhQUFhUixJQUFJTyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxXQUFXO1lBQzFFUixJQUFJTyxRQUFRLEdBQUc7WUFDZixPQUFPWCxxREFBWUEsQ0FBQ2EsUUFBUSxDQUFDVDtRQUMvQjtRQUNBLE9BQU9KLHFEQUFZQSxDQUFDYyxJQUFJO0lBQzFCO0lBRUEsSUFBSTtRQUNGLDRCQUE0QjtRQUM1QixNQUFNQyxTQUFTLElBQUlDLGNBQWNDLE1BQU0sQ0FBQ0MsUUFBUUMsR0FBRyxDQUFDQyxVQUFVO1FBQzlELE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUcsTUFBTXBCLCtDQUFTQSxDQUFDTSxPQUFPUTtRQUUxQ08sU0FBU0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CQyxLQUFLQyxTQUFTLENBQUNMO1FBRXhELE1BQU1NLFNBQVNDLFNBQVNQLFFBQVFRLE1BQU07UUFFdEMsSUFBSXpCLElBQUlPLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLGFBQWFlLFdBQVcsR0FBRztZQUNyRHZCLElBQUlPLFFBQVEsR0FBRztZQUNmLE9BQU9YLHFEQUFZQSxDQUFDYSxRQUFRLENBQUNUO1FBQy9CO1FBRUEsSUFBSUEsSUFBSU8sUUFBUSxDQUFDQyxVQUFVLENBQUMsYUFBYWUsV0FBVyxHQUFHO1lBQ3JEdkIsSUFBSU8sUUFBUSxHQUFHO1lBQ2YsT0FBT1gscURBQVlBLENBQUNhLFFBQVEsQ0FBQ1Q7UUFDL0I7UUFFQSxPQUFPSixxREFBWUEsQ0FBQ2MsSUFBSTtJQUMxQixFQUFFLE9BQU9nQixLQUFLO1FBQ1pDLFFBQVFDLEtBQUssQ0FBQyw0QkFBNEJGO1FBQzFDMUIsSUFBSU8sUUFBUSxHQUFHO1FBQ2YsT0FBT1gscURBQVlBLENBQUNhLFFBQVEsQ0FBQ1Q7SUFDL0I7QUFDRjtBQUVPLE1BQU02QixTQUFTO0lBQ3BCQyxTQUFTO1FBQUM7UUFBaUI7S0FBZ0I7QUFDN0MsRUFBRSIsInNvdXJjZXMiOlsiQzpcXFByb2plY3RzXFxIb3RlbGlyZVxcSG90ZWxpcmVGcm9udGVuZFxcSG90ZWxpcmVQcm9qZWN0MDJcXG1pZGRsZXdhcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XHJcbi8vIGltcG9ydCB0eXBlIHsgTmV4dFJlcXVlc3QgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcclxuLy8gaW1wb3J0IHsgYXV0aENoZWNrIH0gZnJvbSBcIi4vc2VydmljZXMvYXV0aENoZWNrXCI7XHJcblxyXG5cclxuXHJcbi8vIC8vIPCfmoAgTUFJTiBNaWRkbGV3YXJlIEZ1bmN0aW9uXHJcbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbi8vICAgY29uc3QgdXJsID0gcmVxdWVzdC5uZXh0VXJsLmNsb25lKCk7XHJcbi8vICAgY29uc3QgdG9rZW4gPSByZXF1ZXN0LmNvb2tpZXMuZ2V0KFwidG9rZW5cIik/LnZhbHVlO1xyXG5cclxuXHJcbi8vICAgLy8gQWdhciBrb2kgdG9rZW4gaGkgbmFoaSBoYWk6XHJcbi8vICAgaWYgKCF0b2tlbikge1xyXG4vLyAgICAgLy8gQWdhciB1c2VyIC9hZG1pbiB5YSAvb3duZXIgYWNjZXNzIGthciByYWhhIGhhaSDigJQgbG9naW4gYmhlaiBkb1xyXG4vLyAgICAgaWYgKHVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL2FkbWluXCIpIHx8IHVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL293bmVyXCIpKSB7XHJcbi8vICAgICAgIHVybC5wYXRobmFtZSA9IFwiY3VzdG9tZXIvc2lnbmluXCI7XHJcbi8vICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcclxuLy8gICAgIH1cclxuLy8gICAgIC8vIGN1c3RvbWVyIHBhZ2VzIGtlIGxpeWUgdG9rZW4gcmVxdWlyZWQgbmFoaVxyXG4vLyAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XHJcbi8vICAgfVxyXG5cclxuLy8gICB0cnkge1xyXG5cclxuLy8gICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBhdXRoQ2hlY2soKTtcclxuXHJcbi8vICAgICBjb25zb2xlLmxvZyhcInVzZXIgaXNcIix1c2VyKTtcclxuLy8gICAgIGNvbnN0IHJvbGVJZCA9IHBhcnNlSW50KHVzZXIucm9sZWlkKTsgLy8gZS5nLiAxPUFkbWluLCAyPU93bmVyLCAzPUN1c3RvbWVyXHJcblxyXG4vLyAgICAgLy8g8J+boSBBY2Nlc3MgY29udHJvbCBiYXNlZCBvbiByb2xlOlxyXG4vLyAgICAgaWYgKHVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL2FkbWluXCIpKSB7XHJcbi8vICAgICAgIGlmIChyb2xlSWQgIT09IDEpIHtcclxuLy8gICAgICAgICB1cmwucGF0aG5hbWUgPSBcIi91bmF1dGhvcml6ZWRcIjsgLy8gY3VzdG9tIHVuYXV0aG9yaXplZCBwYWdlXHJcbi8vICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xyXG4vLyAgICAgICB9XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgaWYgKHVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL293bmVyXCIpKSB7XHJcbi8vICAgICAgIGlmIChyb2xlSWQgIT09IDIpIHtcclxuLy8gICAgICAgICB1cmwucGF0aG5hbWUgPSBcIi91bmF1dGhvcml6ZWRcIjtcclxuLy8gICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybCk7XHJcbi8vICAgICAgIH1cclxuLy8gICAgIH1cclxuXHJcbi8vICAgICAvLyAvY3VzdG9tZXIgeWEgbm9ybWFsIHBhZ2VzIHNhYiBrZSBsaXllIG9wZW5cclxuLy8gICAgIHJldHVybiBOZXh0UmVzcG9uc2UubmV4dCgpO1xyXG4vLyAgIH0gY2F0Y2ggKGVycikge1xyXG4vLyAgICAgY29uc29sZS5lcnJvcihcIkpXVCBWZXJpZmljYXRpb24gRmFpbGVkOlwiLCBlcnIpO1xyXG4vLyAgICAgdXJsLnBhdGhuYW1lID0gXCIvbG9naW5cIjtcclxuLy8gICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcclxuLy8gICB9XHJcbi8vIH1cclxuXHJcbi8vIC8vIPCfp60gQXBwbHkgb25seSB0byB0aGVzZSByb3V0ZXM6XHJcbi8vIGV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbi8vICAgbWF0Y2hlcjogW1wiL2FkbWluLzpwYXRoKlwiLCBcIi9vd25lci86cGF0aCpcIiwgXCIvY3VzdG9tZXIvOnBhdGgqXCJdLFxyXG4vLyB9O1xyXG5cclxuXHJcbmltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xyXG5pbXBvcnQgdHlwZSB7IE5leHRSZXF1ZXN0IH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XHJcbmltcG9ydCB7IGp3dFZlcmlmeSB9IGZyb20gXCJqb3NlXCI7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4gIGNvbnN0IHVybCA9IHJlcXVlc3QubmV4dFVybC5jbG9uZSgpO1xyXG4gIGNvbnN0IHRva2VuID0gcmVxdWVzdC5jb29raWVzLmdldChcInRva2VuXCIpPy52YWx1ZTtcclxuXHJcbiAgaWYgKCF0b2tlbikge1xyXG4gICAgaWYgKHVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL2FkbWluXCIpIHx8IHVybC5wYXRobmFtZS5zdGFydHNXaXRoKFwiL293bmVyXCIpKSB7XHJcbiAgICAgIHVybC5wYXRobmFtZSA9IFwiL2N1c3RvbWVyL3NpZ25pblwiO1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLm5leHQoKTtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICAvLyDinIUgVmVyaWZ5IHRva2VuIHVzaW5nIGpvc2VcclxuICAgIGNvbnN0IHNlY3JldCA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShwcm9jZXNzLmVudi5KV1RfU0VDUkVUKTtcclxuICAgIGNvbnN0IHsgcGF5bG9hZCB9ID0gYXdhaXQgand0VmVyaWZ5KHRva2VuLCBzZWNyZXQpO1xyXG5cclxuICAgICByZXNwb25zZS5oZWFkZXJzLnNldChcIngtZGVidWctcGF5bG9hZFwiLCBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSk7XHJcbiAgICAgXHJcbiAgICBjb25zdCByb2xlSWQgPSBwYXJzZUludChwYXlsb2FkLnJvbGVpZCBhcyBzdHJpbmcpO1xyXG5cclxuICAgIGlmICh1cmwucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9hZG1pblwiKSAmJiByb2xlSWQgIT09IDEpIHtcclxuICAgICAgdXJsLnBhdGhuYW1lID0gXCIvdW5hdXRob3JpemVkXCI7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvb3duZXJcIikgJiYgcm9sZUlkICE9PSAyKSB7XHJcbiAgICAgIHVybC5wYXRobmFtZSA9IFwiL3VuYXV0aG9yaXplZFwiO1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHVybCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5uZXh0KCk7XHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKFwiSldUIHZlcmlmaWNhdGlvbiBmYWlsZWQ6XCIsIGVycik7XHJcbiAgICB1cmwucGF0aG5hbWUgPSBcIi9jdXN0b21lci9zaWduaW5cIjtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QodXJsKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgbWF0Y2hlcjogW1wiL2FkbWluLzpwYXRoKlwiLCBcIi9vd25lci86cGF0aCpcIl0sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJqd3RWZXJpZnkiLCJtaWRkbGV3YXJlIiwicmVxdWVzdCIsInVybCIsIm5leHRVcmwiLCJjbG9uZSIsInRva2VuIiwiY29va2llcyIsImdldCIsInZhbHVlIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwicmVkaXJlY3QiLCJuZXh0Iiwic2VjcmV0IiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsInBheWxvYWQiLCJyZXNwb25zZSIsImhlYWRlcnMiLCJzZXQiLCJKU09OIiwic3RyaW5naWZ5Iiwicm9sZUlkIiwicGFyc2VJbnQiLCJyb2xlaWQiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJjb25maWciLCJtYXRjaGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});